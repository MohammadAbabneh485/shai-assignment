# -*- coding: utf-8 -*-
"""ShAI_BootCamp_Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SaiGEe-4cVL0hlBRUox8RktQQDo9LaU8

#About Dataset
salaries dataset generally provides information about the employees of an organization in relation to their compensation. It typically includes details such as how much each employee is paid (their salary), their job titles, the departments they work in, and possibly additional information like their level of experience, education, and employment history within the organization.

# Features
- 'Id'
- 'EmployeeName'
- 'JobTitle'
- 'BasePay'
- 'OvertimePay'
- 'OtherPay'
- 'Benefits'
- 'TotalPay' -> salary
- 'TotalPayBenefits'
- 'Year'
- 'Notes'
- 'Agency'
- 'Status'

# Tasks

1. **Basic Data Exploration**: Identify the number of rows and columns in the dataset, determine the data types of each column, and check for missing values in each column.

2. **Descriptive Statistics**: Calculate basic statistics mean, median, mode, minimum, and maximum salary, determine the range of salaries, and find the standard deviation.

3. **Data Cleaning**: Handle missing data by suitable method with explain why you use it.

4. **Basic Data Visualization**: Create histograms or bar charts to visualize the distribution of salaries, and use pie charts to represent the proportion of employees in different departments.

5. **Grouped Analysis**: Group the data by one or more columns and calculate summary statistics for each group, and compare the average salaries across different groups.

6. **Simple Correlation Analysis**: Identify any correlation between salary and another numerical column, and plot a scatter plot to visualize the relationship.

8. **Summary of Insights**: Write a brief report summarizing the findings and insights from the analyses.
"""

import pandas as pd
import numpy as np

# Load your dataset
df = pd.read_csv('/content/Salaries.csv')
df.head()

rows_columns=df.shape
print (rows_columns)

data_type=df.dtypes
print(data_type)

missing_values= df.isnull().sum()
print (missing_values)

mean_salary=df['TotalPayBenefits'].mean()
print(mean_salary)

median_salary=df['TotalPayBenefits'].median()
print(median_salary)

mode_salary=df['TotalPayBenefits'].mode().values[0]
print (mode_salary)

min_salary=df['TotalPayBenefits'].min()
print (min_salary)

max_salary=df['TotalPayBenefits'].max()
print(max_salary)

range_salary=max_salary-min_salary
print(range_salary)

std_salary=df['TotalPayBenefits'].std()
print(std_salary)

df['BasePay'].fillna(df['BasePay'].mean(), inplace=True)
df['OvertimePay'].fillna(df['OvertimePay'].median(), inplace=True)
df['OtherPay'].fillna(df['OtherPay'].median(), inplace=True)

"""Since these columns ('BasePay,' 'OvertimePay,' 'OtherPay') are likely to represent numerical values, you can consider imputing missing values with the mean or median of each respective column. This approach maintains the central tendency of the data and is appropriate when missing values are missing at random."""

df['Benefits'].fillna(0, inplace=True)

"""The 'Benefits' column appears to have a large number of missing values. Depending on the context and importance of this column, you might choose to impute the missing values with a specific value (e.g., 0) if it makes sense, or consider dropping the column if the missing values are too extensive."""

df.drop(columns=['Notes'], inplace=True)

"""The 'Notes' column seems to have a very high proportion of missing values (148654 out of 148654). In such cases, it might be reasonable to drop the entire column, as it won't contribute meaningful information to your analysis."""

import matplotlib.pyplot as plt
# Histogram for Salary Distribution
plt.figure(figsize=(12, 6))
plt.hist(df['TotalPayBenefits'], bins=35)
plt.title('Distribution of Salaries')
plt.xlabel('Salary')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(10, 6))
department_counts = df['JobTitle'].value_counts()

plt.pie(department_counts.head(12), labels=department_counts.head(12).index, autopct='%1.1f%%')
plt.title('Proportion of Employees in Different Departments')
plt.show()

import pandas as pd
grouped_data = df.groupby('JobTitle')['TotalPayBenefits'].agg(['mean']).reset_index()

print(grouped_data)

import matplotlib.pyplot as plt
grouped_data=grouped_data.head(12)
plt.figure(figsize=(10, 6))
plt.bar(grouped_data['JobTitle'], grouped_data['mean'], color='teal')
plt.title('Average Salary Across Different Departments')
plt.xlabel('Department')
plt.ylabel('Average Salary')
plt.xticks(rotation=45, ha='right')
plt.show()

plt.figure(figsize=(12, 6))
plt.scatter(df['BasePay'], df['TotalPayBenefits'])
plt.title('Scatter Plot: Salary vs BasePay')
plt.xlabel('BasePay')
plt.ylabel('Salary')
plt.show()

"""**Summary of Insights: Employee Salary Analysis**

في هذا التحليل، استكشفنا مجموعة بيانات تحتوي على معلومات حول رواتب الموظفين. تضمنت مجموعة البيانات أعمدة مثل
"BasePay" "OvertimePay""OtherPay" "Benefits" "TotalPay" "TotalPayBenefits"

**Basic Data Exploration:**

تحتوي مجموعة البيانات على إجمالي
[عدد الصفوف]و  [عدد الأعمدة]
تمت ملاحظة القيم المفقودة في أعمدة

"BasePay" و"OvertimePay" و"OtherPay" و"Benefits" و"Notes".

تم تحديد أنواع البيانات لكل عمود، ولوحظ وجود القيم المفقودة.

**Data Cleaning:**

تم حساب القيم المفقودة في الأعمدة الرقمية

("BasePay"، و"OvertimePay"، و"OtherPay")

باستخدام المتوسط ​​أو الوسيط، اعتمادًا على التوزيع.
تم احتساب عمود "الفوائد"، الذي يحتوي على عدد كبير من القيم المفقودة، بقيمة محددة (0) على افتراض عدم وجود فوائد للإدخالات المفقودة.
تم إسقاط عمود "الملاحظات"، الذي يحتوي على أغلبية ساحقة من القيم المفقودة، من مجموعة البيانات.

**Descriptive Statistics**:

تم حساب الإحصائيات الأساسية، بما في ذلك المتوسط ​​والوسيط والوضع والحد الأدنى والحد الأقصى،  

"TotalPayBenefits".
 تم أيضًا حساب النطاق والانحراف المعياري  .

**Data Visualization**:

تم إنشاء رسم بياني لتصور توزيع "TotalPayBenefits"،

مما يوفر نظرة ثاقبة لنطاق الرواتب وكثافتها.
يوضح الرسم البياني الدائري نسبة الموظفين في الأقسام المختلفة، ويقدم نظرة عامة سريعة على الهيكل التنظيمي.

**Grouped Analysis**:

تم تجميع البيانات حسب عمود "القسم"، وتم حساب  ( المتوسط) لـ "الراتب" داخل كل قسم.
تم إنشاء مخطط شريطي لمقارنة متوسط ​​الرواتب عبر الأقسام المختلفة، مع تسليط الضوء على الاختلافات في التعويضات.

**Correlation Analysis**:

تم إجراء تحليل الارتباط بين "الراتب النهائي" و"الراتب الأساسي "
وتم إنشاء مخطط مبعثر لتصور العلاقة، وإظهار الاتجاهات أو الأنماط المحتملة

**Conclusion**


قدم التحليل رؤى قيمة حول توزيع الرواتب، وهياكل الإدارات، والعلاقات المحتملة بين المتغيرات.
إن فهم خصائص البيانات وعلاقاتها يضع الأساس لمزيد من التحليلات المتعمقة واتخاذ القرارات المستنيرة.
يقدم هذا التقرير الموجز نظرة عامة موجزة عن النتائج والأفكار الرئيسية المكتسبة من تحليل مجموعة بيانات رواتب الموظفين.

# Good Luck!
"""